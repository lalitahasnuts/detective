{"ast":null,"code":"var _jsxFileName = \"C:\\\\\\u0443\\u0447\\u0451\\u0431\\u0430\\\\\\u0442\\u0440\\u0441\\u043F\\\\blog_api\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Состояния для управления серверами\n  const [servers, setServers] = useState([]);\n  const [currentServer, setCurrentServer] = useState(null);\n  const [serverIp, setServerIp] = useState('');\n  const [serverPort, setServerPort] = useState('3003'); // Установлен порт по умолчанию\n\n  // Состояния для данных\n  const [reports, setReports] = useState([]);\n  const [clues, setClues] = useState([]);\n  const [ipTracking, setIpTracking] = useState([]);\n  const [events, setEvents] = useState([]);\n\n  // Состояния подключений\n  const [isTcpConnected, setIsTcpConnected] = useState(false);\n  const [isWsConnected, setIsWsConnected] = useState(false);\n  const [connectionStatus, setConnectionStatus] = useState('Не подключено');\n\n  // Референсы для WebSocket соединений\n  const tcpSocket = useRef(null);\n  const wsSocket = useRef(null);\n  const udpSocket = useRef(null);\n\n  // Функция отключения от сервера\n  const disconnectFromServer = () => {\n    [tcpSocket, wsSocket, udpSocket].forEach(socket => {\n      if (socket.current) {\n        socket.current.close();\n      }\n    });\n    setIsTcpConnected(false);\n    setIsWsConnected(false);\n    setCurrentServer(null);\n    setConnectionStatus('Отключено');\n  };\n\n  // Функция обработки сообщений\n  const handleMessage = (proto, event) => {\n    try {\n      let data;\n\n      // Попытка разобрать как JSON\n      try {\n        data = JSON.parse(event.data);\n      } catch {\n        // Если не JSON, создаем объект вручную\n        data = {\n          type: 'raw_message',\n          content: event.data,\n          timestamp: new Date().toISOString()\n        };\n      }\n      switch (proto) {\n        case 'tcp':\n          setReports(prev => [...prev, data].slice(-50));\n          break;\n        case 'clues':\n          if (data.type === 'clue') {\n            setClues(prev => [...prev, data].slice(-20));\n          } else if (data.type === 'event') {\n            setEvents(prev => [...prev, data].slice(-10));\n          }\n          break;\n        case 'udp':\n          setIpTracking(prev => [...prev, data].slice(-30));\n          break;\n        default:\n          console.warn('Неизвестный протокол:', proto);\n      }\n    } catch (err) {\n      console.error(`Ошибка обработки ${proto} сообщения:`, err);\n    }\n  };\n\n  // Функция подключения к серверу\n  const connectToServer = server => {\n    disconnectFromServer();\n    setCurrentServer(server);\n    setConnectionStatus('Подключается...');\n    const protocols = [{\n      name: 'tcp',\n      setConnected: setIsTcpConnected,\n      ref: tcpSocket\n    }, {\n      name: 'clues',\n      setConnected: setIsWsConnected,\n      ref: wsSocket\n    }, {\n      name: 'udp',\n      setConnected: null,\n      ref: udpSocket\n    }];\n    protocols.forEach(({\n      name,\n      setConnected,\n      ref\n    }) => {\n      const socket = new WebSocket(`ws://${server.ip}:${server.port}/${name}`);\n      socket.onopen = () => {\n        console.log(`${name.toUpperCase()} соединение установлено`);\n        if (setConnected) setConnected(true);\n        setConnectionStatus('Подключено');\n      };\n      socket.onmessage = e => handleMessage(name, e);\n      socket.onerror = err => {\n        console.error(`${name.toUpperCase()} ошибка:`, err);\n        setConnectionStatus(`Ошибка: ${err.message}`);\n      };\n      socket.onclose = () => {\n        if (setConnected) setConnected(false);\n      };\n      ref.current = socket;\n    });\n  };\n\n  // Добавление нового сервера\n  const addServer = () => {\n    if (serverIp && serverPort) {\n      const newServer = {\n        id: Date.now(),\n        ip: serverIp,\n        port: parseInt(serverPort) || 3003\n      };\n      setServers(prev => [...prev, newServer]);\n    }\n  };\n\n  // Удаление сервера\n  const removeServer = id => {\n    setServers(prev => prev.filter(s => s.id !== id));\n    if (currentServer && currentServer.id === id) {\n      disconnectFromServer();\n    }\n  };\n\n  // Отправка отчета\n  const sendReport = () => {\n    if (!isTcpConnected || !tcpSocket.current) {\n      alert('TCP соединение не установлено!');\n      return;\n    }\n    const reportText = prompt('Введите текст отчета:');\n    if (reportText) {\n      try {\n        tcpSocket.current.send(reportText);\n      } catch (error) {\n        console.error('Ошибка при отправке отчета:', error);\n        alert('Ошибка при отправке отчета. Проверьте соединение.');\n      }\n    }\n  };\n\n  // Очистка при размонтировании\n  useEffect(() => {\n    return () => {\n      disconnectFromServer();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u041A\\u0438\\u0431\\u0435\\u0440-\\u0421\\u044B\\u0449\\u0438\\u043A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: [\"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441: \", connectionStatus]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"server-management\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0423\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435 \\u0441\\u0435\\u0440\\u0432\\u0435\\u0440\\u0430\\u043C\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"server-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"IP \\u0441\\u0435\\u0440\\u0432\\u0435\\u0440\\u0430 (\\u043D\\u0430\\u043F\\u0440\\u0438\\u043C\\u0435\\u0440: localhost)\",\n          value: serverIp,\n          onChange: e => setServerIp(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"\\u041F\\u043E\\u0440\\u0442 (\\u043F\\u043E \\u0443\\u043C\\u043E\\u043B\\u0447\\u0430\\u043D\\u0438\\u044E 3003)\",\n          value: serverPort,\n          onChange: e => setServerPort(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addServer,\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0441\\u0435\\u0440\\u0432\\u0435\\u0440\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"server-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u0441\\u0435\\u0440\\u0432\\u0435\\u0440\\u043E\\u0432:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), servers.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u041D\\u0435\\u0442 \\u0434\\u043E\\u0431\\u0430\\u0432\\u043B\\u0435\\u043D\\u043D\\u044B\\u0445 \\u0441\\u0435\\u0440\\u0432\\u0435\\u0440\\u043E\\u0432\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: servers.map(server => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [server.ip, \":\", server.port]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => connectToServer(server),\n                disabled: (currentServer === null || currentServer === void 0 ? void 0 : currentServer.id) === server.id,\n                children: (currentServer === null || currentServer === void 0 ? void 0 : currentServer.id) === server.id ? 'Подключен' : 'Подключиться'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => removeServer(server.id),\n                children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 19\n            }, this)]\n          }, server.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), currentServer && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"investigation-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"\\u041E\\u0442\\u0447\\u0435\\u0442\\u044B (TCP) \", isTcpConnected ? '✅' : '❌']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendReport,\n          disabled: !isTcpConnected,\n          children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C \\u043E\\u0442\\u0447\\u0435\\u0442\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-container\",\n          children: reports.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u041D\\u0435\\u0442 \\u043F\\u043E\\u043B\\u0443\\u0447\\u0435\\u043D\\u043D\\u044B\\u0445 \\u043E\\u0442\\u0447\\u0435\\u0442\\u043E\\u0432\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: reports.map((report, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"timestamp\",\n                children: report.timestamp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"content\",\n                children: report.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 23\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"\\u041D\\u043E\\u0432\\u044B\\u0435 \\u0443\\u043B\\u0438\\u043A\\u0438 (WebSocket) \", isWsConnected ? '✅' : '❌']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-container\",\n          children: clues.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u041D\\u0435\\u0442 \\u043D\\u043E\\u0432\\u044B\\u0445 \\u0443\\u043B\\u0438\\u043A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: clues.map((clue, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"timestamp\",\n                children: clue.timestamp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"content\",\n                children: clue.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 23\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u041E\\u0442\\u0441\\u043B\\u0435\\u0436\\u0438\\u0432\\u0430\\u043D\\u0438\\u0435 IP (UDP)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-container\",\n          children: ipTracking.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u041D\\u0435\\u0442 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u043E\\u0431 IP-\\u0430\\u0434\\u0440\\u0435\\u0441\\u0430\\u0445\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: ipTracking.map((ip, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"timestamp\",\n                children: ip.timestamp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"content\",\n                children: ip.ip || ip.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 23\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u0421\\u043E\\u0431\\u044B\\u0442\\u0438\\u044F \\u0434\\u043D\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-container\",\n          children: events.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u041D\\u0435\\u0442 \\u043D\\u043E\\u0432\\u044B\\u0445 \\u0441\\u043E\\u0431\\u044B\\u0442\\u0438\\u0439\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: events.map((event, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"timestamp\",\n                children: event.timestamp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"content\",\n                children: event.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 23\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"FXMPuLjCdMZqhV7TL/QU1EJohg8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","App","_s","servers","setServers","currentServer","setCurrentServer","serverIp","setServerIp","serverPort","setServerPort","reports","setReports","clues","setClues","ipTracking","setIpTracking","events","setEvents","isTcpConnected","setIsTcpConnected","isWsConnected","setIsWsConnected","connectionStatus","setConnectionStatus","tcpSocket","wsSocket","udpSocket","disconnectFromServer","forEach","socket","current","close","handleMessage","proto","event","data","JSON","parse","type","content","timestamp","Date","toISOString","prev","slice","console","warn","err","error","connectToServer","server","protocols","name","setConnected","ref","WebSocket","ip","port","onopen","log","toUpperCase","onmessage","e","onerror","message","onclose","addServer","newServer","id","now","parseInt","removeServer","filter","s","sendReport","alert","reportText","prompt","send","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","target","onClick","length","map","disabled","report","i","clue","_c","$RefreshReg$"],"sources":["C:/учёба/трсп/blog_api/client/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n  // Состояния для управления серверами\n  const [servers, setServers] = useState([]);\n  const [currentServer, setCurrentServer] = useState(null);\n  const [serverIp, setServerIp] = useState('');\n  const [serverPort, setServerPort] = useState('3003'); // Установлен порт по умолчанию\n\n  // Состояния для данных\n  const [reports, setReports] = useState([]);\n  const [clues, setClues] = useState([]);\n  const [ipTracking, setIpTracking] = useState([]);\n  const [events, setEvents] = useState([]);\n\n  // Состояния подключений\n  const [isTcpConnected, setIsTcpConnected] = useState(false);\n  const [isWsConnected, setIsWsConnected] = useState(false);\n  const [connectionStatus, setConnectionStatus] = useState('Не подключено');\n\n  // Референсы для WebSocket соединений\n  const tcpSocket = useRef(null);\n  const wsSocket = useRef(null);\n  const udpSocket = useRef(null);\n\n  // Функция отключения от сервера\n  const disconnectFromServer = () => {\n    [tcpSocket, wsSocket, udpSocket].forEach(socket => {\n      if (socket.current) {\n        socket.current.close();\n      }\n    });\n    \n    setIsTcpConnected(false);\n    setIsWsConnected(false);\n    setCurrentServer(null);\n    setConnectionStatus('Отключено');\n  };\n\n  // Функция обработки сообщений\n  const handleMessage = (proto, event) => {\n    try {\n      let data;\n      \n      // Попытка разобрать как JSON\n      try {\n        data = JSON.parse(event.data);\n      } catch {\n        // Если не JSON, создаем объект вручную\n        data = {\n          type: 'raw_message',\n          content: event.data,\n          timestamp: new Date().toISOString()\n        };\n      }\n\n      switch(proto) {\n        case 'tcp':\n          setReports(prev => [...prev, data].slice(-50));\n          break;\n        case 'clues':\n          if (data.type === 'clue') {\n            setClues(prev => [...prev, data].slice(-20));\n          } else if (data.type === 'event') {\n            setEvents(prev => [...prev, data].slice(-10));\n          }\n          break;\n        case 'udp':\n          setIpTracking(prev => [...prev, data].slice(-30));\n          break;\n        default:\n          console.warn('Неизвестный протокол:', proto);\n      }\n    } catch (err) {\n      console.error(`Ошибка обработки ${proto} сообщения:`, err);\n    }\n  };\n\n  // Функция подключения к серверу\n  const connectToServer = (server) => {\n    disconnectFromServer();\n    setCurrentServer(server);\n    setConnectionStatus('Подключается...');\n\n    const protocols = [\n      { name: 'tcp', setConnected: setIsTcpConnected, ref: tcpSocket },\n      { name: 'clues', setConnected: setIsWsConnected, ref: wsSocket },\n      { name: 'udp', setConnected: null, ref: udpSocket }\n    ];\n\n    protocols.forEach(({ name, setConnected, ref }) => {\n      const socket = new WebSocket(`ws://${server.ip}:${server.port}/${name}`);\n      \n      socket.onopen = () => {\n        console.log(`${name.toUpperCase()} соединение установлено`);\n        if (setConnected) setConnected(true);\n        setConnectionStatus('Подключено');\n      };\n\n      socket.onmessage = (e) => handleMessage(name, e);\n\n      socket.onerror = (err) => {\n        console.error(`${name.toUpperCase()} ошибка:`, err);\n        setConnectionStatus(`Ошибка: ${err.message}`);\n      };\n\n      socket.onclose = () => {\n        if (setConnected) setConnected(false);\n      };\n\n      ref.current = socket;\n    });\n  };\n\n  // Добавление нового сервера\n  const addServer = () => {\n    if (serverIp && serverPort) {\n      const newServer = {\n        id: Date.now(),\n        ip: serverIp,\n        port: parseInt(serverPort) || 3003\n      };\n      setServers(prev => [...prev, newServer]);\n    }\n  };\n\n  // Удаление сервера\n  const removeServer = (id) => {\n    setServers(prev => prev.filter(s => s.id !== id));\n    if (currentServer && currentServer.id === id) {\n      disconnectFromServer();\n    }\n  };\n\n  // Отправка отчета\n  const sendReport = () => {\n    if (!isTcpConnected || !tcpSocket.current) {\n      alert('TCP соединение не установлено!');\n      return;\n    }\n\n    const reportText = prompt('Введите текст отчета:');\n    if (reportText) {\n      try {\n        tcpSocket.current.send(reportText);\n      } catch (error) {\n        console.error('Ошибка при отправке отчета:', error);\n        alert('Ошибка при отправке отчета. Проверьте соединение.');\n      }\n    }\n  };\n\n  // Очистка при размонтировании\n  useEffect(() => {\n    return () => {\n      disconnectFromServer();\n    };\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <h1>Кибер-Сыщик</h1>\n      <div className=\"status\">Статус: {connectionStatus}</div>\n      \n      <div className=\"server-management\">\n        <h2>Управление серверами</h2>\n        <div className=\"server-form\">\n          <input \n            type=\"text\" \n            placeholder=\"IP сервера (например: localhost)\" \n            value={serverIp}\n            onChange={(e) => setServerIp(e.target.value)}\n          />\n          <input \n            type=\"number\" \n            placeholder=\"Порт (по умолчанию 3003)\" \n            value={serverPort}\n            onChange={(e) => setServerPort(e.target.value)}\n          />\n          <button onClick={addServer}>Добавить сервер</button>\n        </div>\n        \n        <div className=\"server-list\">\n          <h3>Список серверов:</h3>\n          {servers.length === 0 ? (\n            <p>Нет добавленных серверов</p>\n          ) : (\n            <ul>\n              {servers.map(server => (\n                <li key={server.id}>\n                  <span>{server.ip}:{server.port}</span>\n                  <div>\n                    <button \n                      onClick={() => connectToServer(server)}\n                      disabled={currentServer?.id === server.id}\n                    >\n                      {currentServer?.id === server.id ? 'Подключен' : 'Подключиться'}\n                    </button>\n                    <button onClick={() => removeServer(server.id)}>Удалить</button>\n                  </div>\n                </li>\n              ))}\n            </ul>\n          )}\n        </div>\n      </div>\n      \n      {currentServer && (\n        <div className=\"investigation-panel\">\n          <div className=\"panel-section\">\n            <h2>Отчеты (TCP) {isTcpConnected ? '✅' : '❌'}</h2>\n            <button onClick={sendReport} disabled={!isTcpConnected}>\n              Отправить отчет\n            </button>\n            <div className=\"data-container\">\n              {reports.length === 0 ? (\n                <p>Нет полученных отчетов</p>\n              ) : (\n                <ul>\n                  {reports.map((report, i) => (\n                    <li key={i}>\n                      <span className=\"timestamp\">{report.timestamp}</span>\n                      <span className=\"content\">{report.content}</span>\n                    </li>\n                  ))}\n                </ul>\n              )}\n            </div>\n          </div>\n          \n          <div className=\"panel-section\">\n            <h2>Новые улики (WebSocket) {isWsConnected ? '✅' : '❌'}</h2>\n            <div className=\"data-container\">\n              {clues.length === 0 ? (\n                <p>Нет новых улик</p>\n              ) : (\n                <ul>\n                  {clues.map((clue, i) => (\n                    <li key={i}>\n                      <span className=\"timestamp\">{clue.timestamp}</span>\n                      <span className=\"content\">{clue.content}</span>\n                    </li>\n                  ))}\n                </ul>\n              )}\n            </div>\n          </div>\n          \n          <div className=\"panel-section\">\n            <h2>Отслеживание IP (UDP)</h2>\n            <div className=\"data-container\">\n              {ipTracking.length === 0 ? (\n                <p>Нет данных об IP-адресах</p>\n              ) : (\n                <ul>\n                  {ipTracking.map((ip, i) => (\n                    <li key={i}>\n                      <span className=\"timestamp\">{ip.timestamp}</span>\n                      <span className=\"content\">{ip.ip || ip.content}</span>\n                    </li>\n                  ))}\n                </ul>\n              )}\n            </div>\n          </div>\n          \n          <div className=\"panel-section\">\n            <h2>События дня</h2>\n            <div className=\"data-container\">\n              {events.length === 0 ? (\n                <p>Нет новых событий</p>\n              ) : (\n                <ul>\n                  {events.map((event, i) => (\n                    <li key={i}>\n                      <span className=\"timestamp\">{event.timestamp}</span>\n                      <span className=\"content\">{event.content}</span>\n                    </li>\n                  ))}\n                </ul>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}