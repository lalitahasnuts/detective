{"ast":null,"code":"var _jsxFileName = \"C:\\\\\\u0443\\u0447\\u0451\\u0431\\u0430\\\\\\u0442\\u0440\\u0441\\u043F\\\\blog_api\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Состояния для управления серверами\n  const [servers, setServers] = useState([]);\n  const [currentServer, setCurrentServer] = useState(null);\n  const [serverIp, setServerIp] = useState('');\n  const [serverPort, setServerPort] = useState('');\n\n  // Состояния для данных\n  const [reports, setReports] = useState([]);\n  const [clues, setClues] = useState([]);\n  const [ipTracking, setIpTracking] = useState([]);\n  const [events, setEvents] = useState([]);\n\n  // Состояния подключений\n  const [isTcpConnected, setIsTcpConnected] = useState(false);\n  const [isWsConnected, setIsWsConnected] = useState(false);\n\n  // Референсы для WebSocket соединений\n  const tcpSocket = useRef(null);\n  const wsSocket = useRef(null);\n  const udpSocket = useRef(null);\n\n  // Функция отключения от сервера\n  const disconnectFromServer = () => {\n    if (tcpSocket.current) {\n      tcpSocket.current.close();\n      setIsTcpConnected(false);\n    }\n    if (wsSocket.current) {\n      wsSocket.current.close();\n      setIsWsConnected(false);\n    }\n    if (udpSocket.current) {\n      udpSocket.current.close();\n    }\n    setCurrentServer(null);\n  };\n\n  // Функция подключения к серверу\n  const connectToServer = server => {\n    disconnectFromServer();\n    setCurrentServer(server);\n    const protocols = ['tcp', 'clues', 'udp'];\n    protocols.forEach(proto => {\n      const socket = new WebSocket(`ws://${server.ip}:${server.port}/${proto}`);\n      socket.onopen = () => {\n        console.log(`${proto.toUpperCase()} соединение установлено`);\n        if (proto === 'tcp') setIsTcpConnected(true);\n        if (proto === 'clues') setIsWsConnected(true);\n      };\n      socket.onmessage = e => {\n        try {\n          const data = JSON.parse(e.data);\n          switch (proto) {\n            case 'tcp':\n              setReports(prev => [...prev, data].slice(-50));\n              break;\n            case 'clues':\n              if (data.type === 'clue') {\n                setClues(prev => [...prev, data].slice(-20));\n              } else if (data.type === 'event') {\n                setEvents(prev => [...prev, data].slice(-10));\n              }\n              break;\n            case 'udp':\n              setIpTracking(prev => [...prev, data].slice(-30));\n              break;\n            default:\n              console.warn('Unknown protocol:', proto);\n          }\n        } catch (err) {\n          console.error('Error parsing message:', err);\n        }\n      };\n      socket.onerror = err => {\n        console.error(`${proto.toUpperCase()} error:`, err);\n      };\n      socket.onclose = () => {\n        if (proto === 'tcp') setIsTcpConnected(false);\n        if (proto === 'clues') setIsWsConnected(false);\n      };\n\n      // Сохраняем сокеты\n      if (proto === 'tcp') tcpSocket.current = socket;\n      if (proto === 'clues') wsSocket.current = socket;\n      if (proto === 'udp') udpSocket.current = socket;\n    });\n  };\n\n  // Добавление нового сервера\n  const addServer = () => {\n    if (serverIp && serverPort) {\n      const newServer = {\n        id: Date.now(),\n        ip: serverIp,\n        port: parseInt(serverPort)\n      };\n      setServers(prev => [...prev, newServer]);\n      setServerIp('');\n      setServerPort('');\n    }\n  };\n\n  // Удаление сервера\n  const removeServer = id => {\n    setServers(prev => prev.filter(s => s.id !== id));\n    if (currentServer && currentServer.id === id) {\n      disconnectFromServer();\n    }\n  };\n\n  // Отправка отчета\n  const sendReport = () => {\n    if (!isTcpConnected || !tcpSocket.current) {\n      alert('TCP соединение не установлено!');\n      return;\n    }\n    const reportText = prompt('Введите текст отчета:');\n    if (reportText) {\n      try {\n        tcpSocket.current.send(reportText);\n      } catch (error) {\n        console.error('Ошибка при отправке отчета:', error);\n        alert('Ошибка при отправке отчета. Проверьте соединение.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u041A\\u0438\\u0431\\u0435\\u0440-\\u0421\\u044B\\u0449\\u0438\\u043A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"server-management\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0423\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435 \\u0441\\u0435\\u0440\\u0432\\u0435\\u0440\\u0430\\u043C\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"IP \\u0441\\u0435\\u0440\\u0432\\u0435\\u0440\\u0430\",\n          value: serverIp,\n          onChange: e => setServerIp(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"\\u041F\\u043E\\u0440\\u0442 \\u0441\\u0435\\u0440\\u0432\\u0435\\u0440\\u0430\",\n          value: serverPort,\n          onChange: e => setServerPort(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addServer,\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0441\\u0435\\u0440\\u0432\\u0435\\u0440\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"server-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u0441\\u0435\\u0440\\u0432\\u0435\\u0440\\u043E\\u0432:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: servers.map(server => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [server.ip, \":\", server.port, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => connectToServer(server),\n              children: (currentServer === null || currentServer === void 0 ? void 0 : currentServer.id) === server.id ? 'Подключен' : 'Подключиться'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => removeServer(server.id),\n              children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this)]\n          }, server.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), currentServer && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"investigation-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"\\u041E\\u0442\\u0447\\u0435\\u0442\\u044B (TCP) \", isTcpConnected ? '✅' : '❌']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendReport,\n          disabled: !isTcpConnected,\n          children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C \\u043E\\u0442\\u0447\\u0435\\u0442\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: reports.map((report, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [report.timestamp, \": \", report.content]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"\\u041D\\u043E\\u0432\\u044B\\u0435 \\u0443\\u043B\\u0438\\u043A\\u0438 (WebSocket) \", isWsConnected ? '✅' : '❌']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: clues.map((clue, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [clue.timestamp, \": \", clue.content]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u041E\\u0442\\u0441\\u043B\\u0435\\u0436\\u0438\\u0432\\u0430\\u043D\\u0438\\u0435 IP (UDP)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: ipTracking.map((ip, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [ip.timestamp, \": \", ip.ip]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u0421\\u043E\\u0431\\u044B\\u0442\\u0438\\u044F \\u0434\\u043D\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: events.map((event, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [event.timestamp, \": \", event.content]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"oAgHI4amumGAIpD45gsz3kNw2Rs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","App","_s","servers","setServers","currentServer","setCurrentServer","serverIp","setServerIp","serverPort","setServerPort","reports","setReports","clues","setClues","ipTracking","setIpTracking","events","setEvents","isTcpConnected","setIsTcpConnected","isWsConnected","setIsWsConnected","tcpSocket","wsSocket","udpSocket","disconnectFromServer","current","close","connectToServer","server","protocols","forEach","proto","socket","WebSocket","ip","port","onopen","console","log","toUpperCase","onmessage","e","data","JSON","parse","prev","slice","type","warn","err","error","onerror","onclose","addServer","newServer","id","Date","now","parseInt","removeServer","filter","s","sendReport","alert","reportText","prompt","send","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","target","onClick","map","disabled","report","i","timestamp","content","clue","event","_c","$RefreshReg$"],"sources":["C:/учёба/трсп/blog_api/client/src/App.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport './App.css';\n\nfunction App() {\n  // Состояния для управления серверами\n  const [servers, setServers] = useState([]);\n  const [currentServer, setCurrentServer] = useState(null);\n  const [serverIp, setServerIp] = useState('');\n  const [serverPort, setServerPort] = useState('');\n\n  // Состояния для данных\n  const [reports, setReports] = useState([]);\n  const [clues, setClues] = useState([]);\n  const [ipTracking, setIpTracking] = useState([]);\n  const [events, setEvents] = useState([]);\n\n  // Состояния подключений\n  const [isTcpConnected, setIsTcpConnected] = useState(false);\n  const [isWsConnected, setIsWsConnected] = useState(false);\n\n  // Референсы для WebSocket соединений\n  const tcpSocket = useRef(null);\n  const wsSocket = useRef(null);\n  const udpSocket = useRef(null);\n\n  // Функция отключения от сервера\n  const disconnectFromServer = () => {\n    if (tcpSocket.current) {\n      tcpSocket.current.close();\n      setIsTcpConnected(false);\n    }\n    if (wsSocket.current) {\n      wsSocket.current.close();\n      setIsWsConnected(false);\n    }\n    if (udpSocket.current) {\n      udpSocket.current.close();\n    }\n    setCurrentServer(null);\n  };\n\n  // Функция подключения к серверу\n  const connectToServer = (server) => {\n    disconnectFromServer();\n    setCurrentServer(server);\n\n    const protocols = ['tcp', 'clues', 'udp'];\n    \n    protocols.forEach(proto => {\n      const socket = new WebSocket(`ws://${server.ip}:${server.port}/${proto}`);\n      \n      socket.onopen = () => {\n        console.log(`${proto.toUpperCase()} соединение установлено`);\n        if (proto === 'tcp') setIsTcpConnected(true);\n        if (proto === 'clues') setIsWsConnected(true);\n      };\n\n      socket.onmessage = (e) => {\n        try {\n          const data = JSON.parse(e.data);\n          switch(proto) {\n            case 'tcp': \n              setReports(prev => [...prev, data].slice(-50));\n              break;\n            case 'clues':\n              if (data.type === 'clue') {\n                setClues(prev => [...prev, data].slice(-20));\n              } else if (data.type === 'event') {\n                setEvents(prev => [...prev, data].slice(-10));\n              }\n              break;\n            case 'udp':\n              setIpTracking(prev => [...prev, data].slice(-30));\n              break;\n            default:\n              console.warn('Unknown protocol:', proto);\n          }\n        } catch (err) {\n          console.error('Error parsing message:', err);\n        }\n      };\n\n      socket.onerror = (err) => {\n        console.error(`${proto.toUpperCase()} error:`, err);\n      };\n\n      socket.onclose = () => {\n        if (proto === 'tcp') setIsTcpConnected(false);\n        if (proto === 'clues') setIsWsConnected(false);\n      };\n\n      // Сохраняем сокеты\n      if (proto === 'tcp') tcpSocket.current = socket;\n      if (proto === 'clues') wsSocket.current = socket;\n      if (proto === 'udp') udpSocket.current = socket;\n    });\n  };\n\n  // Добавление нового сервера\n  const addServer = () => {\n    if (serverIp && serverPort) {\n      const newServer = {\n        id: Date.now(),\n        ip: serverIp,\n        port: parseInt(serverPort)\n      };\n      setServers(prev => [...prev, newServer]);\n      setServerIp('');\n      setServerPort('');\n    }\n  };\n\n  // Удаление сервера\n  const removeServer = (id) => {\n    setServers(prev => prev.filter(s => s.id !== id));\n    if (currentServer && currentServer.id === id) {\n      disconnectFromServer();\n    }\n  };\n\n  // Отправка отчета\n  const sendReport = () => {\n    if (!isTcpConnected || !tcpSocket.current) {\n      alert('TCP соединение не установлено!');\n      return;\n    }\n\n    const reportText = prompt('Введите текст отчета:');\n    if (reportText) {\n      try {\n        tcpSocket.current.send(reportText);\n      } catch (error) {\n        console.error('Ошибка при отправке отчета:', error);\n        alert('Ошибка при отправке отчета. Проверьте соединение.');\n      }\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <h1>Кибер-Сыщик</h1>\n      <div className=\"server-management\">\n        <h2>Управление серверами</h2>\n        <div>\n          <input \n            type=\"text\" \n            placeholder=\"IP сервера\" \n            value={serverIp}\n            onChange={(e) => setServerIp(e.target.value)}\n          />\n          <input \n            type=\"number\" \n            placeholder=\"Порт сервера\" \n            value={serverPort}\n            onChange={(e) => setServerPort(e.target.value)}\n          />\n          <button onClick={addServer}>Добавить сервер</button>\n        </div>\n        \n        <div className=\"server-list\">\n          <h3>Список серверов:</h3>\n          <ul>\n            {servers.map(server => (\n              <li key={server.id}>\n                {server.ip}:{server.port}\n                <button onClick={() => connectToServer(server)}>\n                  {currentServer?.id === server.id ? 'Подключен' : 'Подключиться'}\n                </button>\n                <button onClick={() => removeServer(server.id)}>Удалить</button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n      \n      {currentServer && (\n        <div className=\"investigation-panel\">\n          <div className=\"panel-section\">\n            <h2>Отчеты (TCP) {isTcpConnected ? '✅' : '❌'}</h2>\n            <button onClick={sendReport} disabled={!isTcpConnected}>\n              Отправить отчет\n            </button>\n            <ul>\n              {reports.map((report, i) => (\n                <li key={i}>{report.timestamp}: {report.content}</li>\n              ))}\n            </ul>\n          </div>\n          \n          <div className=\"panel-section\">\n            <h2>Новые улики (WebSocket) {isWsConnected ? '✅' : '❌'}</h2>\n            <ul>\n              {clues.map((clue, i) => (\n                <li key={i}>{clue.timestamp}: {clue.content}</li>\n              ))}\n            </ul>\n          </div>\n          \n          <div className=\"panel-section\">\n            <h2>Отслеживание IP (UDP)</h2>\n            <ul>\n              {ipTracking.map((ip, i) => (\n                <li key={i}>{ip.timestamp}: {ip.ip}</li>\n              ))}\n            </ul>\n          </div>\n          \n          <div className=\"panel-section\">\n            <h2>События дня</h2>\n            <ul>\n              {events.map((event, i) => (\n                <li key={i}>{event.timestamp}: {event.content}</li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}