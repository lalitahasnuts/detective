{"ast":null,"code":"var _jsxFileName = \"C:\\\\\\u0443\\u0447\\u0451\\u0431\\u0430\\\\\\u0442\\u0440\\u0441\\u043F\\\\blog_api\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [servers, setServers] = useState([]);\n  const [currentServer, setCurrentServer] = useState(null);\n  const [reports, setReports] = useState([]);\n  const [clues, setClues] = useState([]);\n  const [ipTracking, setIpTracking] = useState([]);\n  const [events, setEvents] = useState([]);\n  const [serverIp, setServerIp] = useState('');\n  const [serverPort, setServerPort] = useState('');\n  const tcpSocket = useRef(null);\n  const udpSocket = useRef(null);\n  const wsSocket = useRef(null);\n\n  // Подключение к TCP серверу\n  const connectToServer = server => {\n    disconnectFromServer();\n    setCurrentServer(server);\n\n    // TCP соединение для отчетов\n    tcpSocket.current = new WebSocket(`ws://${server.ip}:${server.tcpPort}`);\n    tcpSocket.current.onmessage = e => {\n      setReports(prev => [...prev, {\n        type: 'report',\n        content: e.data,\n        timestamp: new Date().toISOString()\n      }].slice(-50)); // Храним последние 50 отчетов\n    };\n\n    // WebSocket соединение для улик\n    wsSocket.current = new WebSocket(`ws://${server.ip}:${server.wsPort}`);\n    wsSocket.current.onmessage = e => {\n      const data = JSON.parse(e.data);\n      if (data.type === 'new_clue') {\n        setClues(prev => [...prev, data].slice(-20)); // Храним последние 20 улик\n      } else if (data.type === 'daily_event') {\n        setEvents(prev => [...prev, data].slice(-10)); // Храним последние 10 событий\n        alert(`Событие дня: ${data.event}`);\n      }\n    };\n\n    // UDP \"соединение\" для отслеживания IP\n    udpSocket.current = new WebSocket(`ws://${server.ip}:${server.udpPort}`);\n    udpSocket.current.onmessage = e => {\n      setIpTracking(prev => [...prev, {\n        content: e.data,\n        timestamp: new Date().toISOString()\n      }].slice(-30)); // Храним последние 30 IP\n    };\n  };\n\n  // Отключение от сервера\n  const disconnectFromServer = () => {\n    if (tcpSocket.current) tcpSocket.current.close();\n    if (udpSocket.current) udpSocket.current.close();\n    if (wsSocket.current) wsSocket.current.close();\n    setCurrentServer(null);\n  };\n\n  // Добавление нового сервера\n  const addServer = () => {\n    if (serverIp && serverPort) {\n      const newServer = {\n        id: Date.now(),\n        ip: serverIp,\n        tcpPort: parseInt(serverPort) + 0,\n        udpPort: parseInt(serverPort) + 1,\n        wsPort: parseInt(serverPort) + 2\n      };\n      setServers(prev => [...prev, newServer]);\n      setServerIp('');\n      setServerPort('');\n    }\n  };\n\n  // Удаление сервера\n  const removeServer = id => {\n    setServers(prev => prev.filter(s => s.id !== id));\n    if (currentServer && currentServer.id === id) {\n      disconnectFromServer();\n    }\n  };\n\n  // Отправка отчета на сервер\n  const sendReport = () => {\n    const reportText = prompt('Введите текст отчета:');\n    if (reportText && tcpSocket.current) {\n      tcpSocket.current.send(reportText);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u041A\\u0438\\u0431\\u0435\\u0440-\\u0421\\u044B\\u0449\\u0438\\u043A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"server-management\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0423\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435 \\u0441\\u0435\\u0440\\u0432\\u0435\\u0440\\u0430\\u043C\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"IP \\u0441\\u0435\\u0440\\u0432\\u0435\\u0440\\u0430\",\n          value: serverIp,\n          onChange: e => setServerIp(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"\\u0411\\u0430\\u0437\\u043E\\u0432\\u044B\\u0439 \\u043F\\u043E\\u0440\\u0442\",\n          value: serverPort,\n          onChange: e => setServerPort(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addServer,\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0441\\u0435\\u0440\\u0432\\u0435\\u0440\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"server-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u0441\\u0435\\u0440\\u0432\\u0435\\u0440\\u043E\\u0432:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: servers.map(server => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [server.ip, \":\", server.tcpPort, \"/\", server.udpPort, \"/\", server.wsPort, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => connectToServer(server),\n              children: (currentServer === null || currentServer === void 0 ? void 0 : currentServer.id) === server.id ? 'Подключен' : 'Подключиться'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => removeServer(server.id),\n              children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this)]\n          }, server.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), currentServer && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"investigation-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u041E\\u0442\\u0447\\u0435\\u0442\\u044B (TCP)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendReport,\n          children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C \\u043E\\u0442\\u0447\\u0435\\u0442\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: reports.map((report, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [report.timestamp, \": \", report.content]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u041D\\u043E\\u0432\\u044B\\u0435 \\u0443\\u043B\\u0438\\u043A\\u0438 (WebSocket)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: clues.map((clue, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [clue.timestamp, \": \", clue.clue]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u041E\\u0442\\u0441\\u043B\\u0435\\u0436\\u0438\\u0432\\u0430\\u043D\\u0438\\u0435 IP (UDP)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: ipTracking.map((ip, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [ip.timestamp, \": \", ip.content]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u0421\\u043E\\u0431\\u044B\\u0442\\u0438\\u044F \\u0434\\u043D\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: events.map((event, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [event.timestamp, \": \", event.event]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tN8bcTkTlq0RXu0LrfZhE6END1I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","App","_s","servers","setServers","currentServer","setCurrentServer","reports","setReports","clues","setClues","ipTracking","setIpTracking","events","setEvents","serverIp","setServerIp","serverPort","setServerPort","tcpSocket","udpSocket","wsSocket","connectToServer","server","disconnectFromServer","current","WebSocket","ip","tcpPort","onmessage","e","prev","type","content","data","timestamp","Date","toISOString","slice","wsPort","JSON","parse","alert","event","udpPort","close","addServer","newServer","id","now","parseInt","removeServer","filter","s","sendReport","reportText","prompt","send","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","target","onClick","map","report","i","clue","_c","$RefreshReg$"],"sources":["C:/учёба/трсп/blog_api/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [servers, setServers] = useState([]);\n  const [currentServer, setCurrentServer] = useState(null);\n  const [reports, setReports] = useState([]);\n  const [clues, setClues] = useState([]);\n  const [ipTracking, setIpTracking] = useState([]);\n  const [events, setEvents] = useState([]);\n  const [serverIp, setServerIp] = useState('');\n  const [serverPort, setServerPort] = useState('');\n  \n  const tcpSocket = useRef(null);\n  const udpSocket = useRef(null);\n  const wsSocket = useRef(null);\n\n  // Подключение к TCP серверу\n  const connectToServer = (server) => {\n    disconnectFromServer();\n    \n    setCurrentServer(server);\n    \n    // TCP соединение для отчетов\n    tcpSocket.current = new WebSocket(`ws://${server.ip}:${server.tcpPort}`);\n    tcpSocket.current.onmessage = (e) => {\n      setReports(prev => [...prev, {\n        type: 'report',\n        content: e.data,\n        timestamp: new Date().toISOString()\n      }].slice(-50)); // Храним последние 50 отчетов\n    };\n    \n    // WebSocket соединение для улик\n    wsSocket.current = new WebSocket(`ws://${server.ip}:${server.wsPort}`);\n    wsSocket.current.onmessage = (e) => {\n      const data = JSON.parse(e.data);\n      if (data.type === 'new_clue') {\n        setClues(prev => [...prev, data].slice(-20)); // Храним последние 20 улик\n      } else if (data.type === 'daily_event') {\n        setEvents(prev => [...prev, data].slice(-10)); // Храним последние 10 событий\n        alert(`Событие дня: ${data.event}`);\n      }\n    };\n    \n    // UDP \"соединение\" для отслеживания IP\n    udpSocket.current = new WebSocket(`ws://${server.ip}:${server.udpPort}`);\n    udpSocket.current.onmessage = (e) => {\n      setIpTracking(prev => [...prev, {\n        content: e.data,\n        timestamp: new Date().toISOString()\n      }].slice(-30)); // Храним последние 30 IP\n    };\n  };\n  \n  // Отключение от сервера\n  const disconnectFromServer = () => {\n    if (tcpSocket.current) tcpSocket.current.close();\n    if (udpSocket.current) udpSocket.current.close();\n    if (wsSocket.current) wsSocket.current.close();\n    setCurrentServer(null);\n  };\n  \n  // Добавление нового сервера\n  const addServer = () => {\n    if (serverIp && serverPort) {\n      const newServer = {\n        id: Date.now(),\n        ip: serverIp,\n        tcpPort: parseInt(serverPort) + 0,\n        udpPort: parseInt(serverPort) + 1,\n        wsPort: parseInt(serverPort) + 2\n      };\n      setServers(prev => [...prev, newServer]);\n      setServerIp('');\n      setServerPort('');\n    }\n  };\n  \n  // Удаление сервера\n  const removeServer = (id) => {\n    setServers(prev => prev.filter(s => s.id !== id));\n    if (currentServer && currentServer.id === id) {\n      disconnectFromServer();\n    }\n  };\n  \n  // Отправка отчета на сервер\n  const sendReport = () => {\n    const reportText = prompt('Введите текст отчета:');\n    if (reportText && tcpSocket.current) {\n      tcpSocket.current.send(reportText);\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <h1>Кибер-Сыщик</h1>\n      <div className=\"server-management\">\n        <h2>Управление серверами</h2>\n        <div>\n          <input \n            type=\"text\" \n            placeholder=\"IP сервера\" \n            value={serverIp}\n            onChange={(e) => setServerIp(e.target.value)}\n          />\n          <input \n            type=\"number\" \n            placeholder=\"Базовый порт\" \n            value={serverPort}\n            onChange={(e) => setServerPort(e.target.value)}\n          />\n          <button onClick={addServer}>Добавить сервер</button>\n        </div>\n        \n        <div className=\"server-list\">\n          <h3>Список серверов:</h3>\n          <ul>\n            {servers.map(server => (\n              <li key={server.id}>\n                {server.ip}:{server.tcpPort}/{server.udpPort}/{server.wsPort}\n                <button onClick={() => connectToServer(server)}>\n                  {currentServer?.id === server.id ? 'Подключен' : 'Подключиться'}\n                </button>\n                <button onClick={() => removeServer(server.id)}>Удалить</button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n      \n      {currentServer && (\n        <div className=\"investigation-panel\">\n          <div className=\"panel-section\">\n            <h2>Отчеты (TCP)</h2>\n            <button onClick={sendReport}>Отправить отчет</button>\n            <ul>\n              {reports.map((report, i) => (\n                <li key={i}>{report.timestamp}: {report.content}</li>\n              ))}\n            </ul>\n          </div>\n          \n          <div className=\"panel-section\">\n            <h2>Новые улики (WebSocket)</h2>\n            <ul>\n              {clues.map((clue, i) => (\n                <li key={i}>{clue.timestamp}: {clue.clue}</li>\n              ))}\n            </ul>\n          </div>\n          \n          <div className=\"panel-section\">\n            <h2>Отслеживание IP (UDP)</h2>\n            <ul>\n              {ipTracking.map((ip, i) => (\n                <li key={i}>{ip.timestamp}: {ip.content}</li>\n              ))}\n            </ul>\n          </div>\n          \n          <div className=\"panel-section\">\n            <h2>События дня</h2>\n            <ul>\n              {events.map((event, i) => (\n                <li key={i}>{event.timestamp}: {event.event}</li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}